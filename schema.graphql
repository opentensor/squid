type Account @entity {
  "Account address"
  id: ID!
  hotkeys: [Hotkey] @derivedFrom(field: "account")
  transfers: [Transfer] @derivedFrom(field: "from")
  balance: BigInt!
}


type Hotkey @entity {
  "Hotkey address"
  id: ID!
  account: Account!
  neuron: [Neuron] @derivedFrom(field: "hotkey")
}

type Neuron @entity {
  "Neuron address"
  id: ID!
  coldkey: String!
  hotkey: Hotkey!
  uid: Int!
  stake: BigInt!
  rank: BigInt!
  incentive: BigInt!
  trust: BigInt!
  consensus: BigInt!
  dividends: BigInt!
  emission: BigInt!
  ip: BigInt!
  port: Int!
  version: Int!
  lastUpdated: BigInt!
  createdAt: DateTime!
}

type Transfer @entity {
  "Transfer ID"
  id: ID!
  from: Account!
  to: String!
  amount: BigInt!
  blockNum: Int!
  blockHash: String!
  createdAt: DateTime!
}
